services:
  notification-app-rabbitmq:
    image: rabbitmq:3.12.12-management
    container_name: notification-app-rabbitmq
    hostname: rabbit
    restart: always
    volumes:
      - .local/services/rabbitmq:/var/lib/rabbitmq/mnesia/
    environment:
      RABBITMQ_DEFAULT_USER: ${RABBITMQ_DEFAULT_USER}
      RABBITMQ_DEFAULT_PASS: ${RABBITMQ_DEFAULT_PASS}
    healthcheck:
      test: rabbitmq-diagnostics check_port_connectivity
      interval: 10s
      timeout: 10s
      retries: 10
    ports:
      - "5673:${RABBITMQ_PORT}"
      - 15674:15672
  notification-app-mongodb:
    container_name: notification-app-mongodb
    image: mongo:6.0
    volumes:
      - .local/services/mongo:/data/db
    ports:
      - "27017:${MONGODB_PORT}"
    environment:
      - MONGO_INITDB_ROOT_USERNAME=${MONGO_INITDB_ROOT_USERNAME}
      - MONGO_INITDB_ROOT_PASSWORD=${MONGO_INITDB_ROOT_PASSWORD}
      - MONGO_INITDB_DATABASE=${MONGO_INITDB_DATABASE}
  notification-app-localstack:
    image: localstack/localstack:3.0
    container_name: notification-app-localstack
    hostname: localstack
    ports:
      - 4568:4566
      - 8084:8080
    environment:
      - SERVICES=ses
      - DEBUG=0
      - DOCKER_HOST=unix:///var/run/docker.sock
      - HOSTNAME=localstack
    env_file:
      - .env
    volumes:
      - .local/services/localstack-data:/var/lib/localstack
      - "/var/run/docker.sock:/var/run/docker.sock"
  notification-app:
    platform: linux/x86-64
    container_name: notification-app
    build: .
    command: python -m src.main
    env_file:
      - .env
    volumes:
      - .:/home/appuser
    init: True
    depends_on:
      notification-app-mongodb:
        condition: service_started
      notification-app-rabbitmq:
        condition: service_healthy
      notification-app-localstack:
        condition: service_started
